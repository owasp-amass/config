# The scope objects can be used as seed data and obviously values to determine the scope of the engine.
# The options are items that I believe we can implement as well (Obviously not now but later in the future)

seed:
  domains: # domain names to be used as seed data
    - seed.com
  ips: # IP addresses to be used as seed data
    - 10.1.2.45
    - 10.1.2.46-50
    - 10.1.2.50-10.1.2.65
  asns: # ASNs that are to be used as seed data
    - 2468
  cidrs: # CIDR ranges that are to be used as seed data
    - 123.2.3.0/24
  ports: # ports to be used when actively reaching a service
    - 8080
    - 8443
scope:
  domains: # domain names to be in scope
    - example.com
  ips: # IP addresses to be in scope, multiple methods of inserting ip addresses can be used
    - 192.0.2.1
    - 192.0.2.2
    - 192.168.0.3-8
    - 192.168.0.10-192.168.0.20
  asns: # ASNs that are to be in scope
    - 1234
    - 5678
  cidrs: # CIDR ranges that are to be in scope
    - 192.0.2.0/24
    - 192.0.2.128/25
  ports: # ports to be used when actively reaching a service
    - 80
    - 443
#   - 8080-8088 # this is an example of how to specify a range of ports, ranges are handled in an inclusive manner
  blacklist: # subdomains to be blacklisted
    - example.example1.com
options:
  rigid_boundaries: true # boolean to determine if rigid boundaries are enabled
  resolvers: 
    - "../examples/resolvers.txt" # array of 1 path or multiple IPs to use as a resolver
    - 76.76.19.19
  datasources: "./datasources.yaml" # the file path that will point to the data source configuration
  wordlist: # global wordlist(s) to uses 
    - "./wordlists/deepmagic.com_top50kprefixes.txt"
    - "./wordlists/deepmagic.com_top500prefixes.txt"
  database: "postgres://username:password@localhost:5432/database?testing=works" # databases URI to be used when adding entries
  active: true # boolean to determine if active scanning is enabled
  bruteforce: # specific option to use when brute forcing is needed
    enabled: true
    wordlists: # wordlist(s) to use that are specific to brute forcing
      - "./wordlists/subdomains-top1mil-5000.txt"
  alterations: # specific option to use when brute forcing is needed
    enabled: true
    wordlists: # wordlist(s) to use that are specific to alterations
      - "./wordlists/subdomains-top1mil-110000.txt"
  engine: "https://username:password@localhost:443/graphql?testing=works" # the URI to the engine
  default_transform_values: # default, global values for transformations, if not specified in the transformation.
    ttl: 1440 # default is 1440
    confidence: 50 # default is 50
    priority: 5 # default global priority is 5 (assuming its 1-10)

transformations:
  FQDN->IPAddress:
    priority: 1
    confidence: 80
  FQDN->DomainRecord:
    priority: 2
  FQDN->ALL: 
    ttl: 1440 # although the default is 1440, this is an example of how to override the default
    exclude: [TLS,FQDN]
  IPAddress->FQDN:
    priority: 1
    confidence: 80
  IPAddress->Netblock:
    # leaving both priority and confidence out
